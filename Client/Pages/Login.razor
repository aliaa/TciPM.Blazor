@page "/login"
@inject AuthenticationStateProvider _auth
@inject NavigationManager nav
@inject HttpClient Http

<h3>ورود</h3>

<EditForm Model="model" OnValidSubmit="CheckLogin">
    <DataAnnotationsValidator />
    <div class="row mt-5">
        <div class="col-3">
            <div class="form-group">
                <label for="Username">نام کاربری</label>
                <InputText type="text" @bind-Value="model.Username" class="form-control" />
            </div>
            <div class="form-group">
                <label for="Password">رمز عبور</label>
                <InputText type="password" @bind-Value="model.Password" class="form-control" />
            </div>
            @if (provinces != null)
            {
                <div class="form-group">
                    <label for="Province">استان</label>
                    <InputSelect @bind-Value="model.Province" class="form-control">
                        <option selected disabled>انتخاب کنید</option>
                        @foreach (var p in provinces)
                            {
                            <option value="@p.Prefix">@p.Name</option>
                            }
                    </InputSelect>
                </div>
                <div class="form-group">
                    <input type="submit" class="btn btn-primary" value="ورود" />
                </div>
            }
        </div>
    </div>
</EditForm>


@code {
    private LoginViewModel model = new LoginViewModel();
    private List<Province> provinces = null;

    protected override async Task OnInitializedAsync()
    {
        provinces = await Http.GetFromJsonAsync<List<Province>>("Place/ProvinceList");
    }

    private async Task CheckLogin(EditContext editContext)
    {
        var auth = (AuthStateProvider)_auth;
        if (await auth.Login(model))
        {
            nav.NavigateTo("/");
        }
    }
}
