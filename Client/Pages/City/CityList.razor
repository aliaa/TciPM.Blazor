@page "/city/list"
@attribute [Authorize(nameof(Permission.ShowCenters))]
@inject HttpClientX http
@inject IModalService modal

@if (cities == null)
{
    <Loading />
}
else
{
    <div class="text-center">
        <button class="btn btn-info" @onclick="@(() => modal.Show<EditCity>("شهر جدید"))">تعریف شهر جدید</button>
    </div>


    <div class="mt-4">
        <ObjectTable Data="cities" LinkColumns="linkColumns" ColumnsBackColor="colorsOfColumns" />
    </div>
}

@code {
    private CentersAggregatedData[] cities;
    private Dictionary<string, List<string>> colorsOfColumns;

    private static ObjectTable<CentersAggregatedData>.LinkColumn[] linkColumns = new ObjectTable<CentersAggregatedData>.LinkColumn[]
    {
        new ObjectTable<CentersAggregatedData>.LinkColumn { Text = "ویرایش", KeyFieldName = nameof(CentersAggregatedData.Id), Link = @"/city/edit/{Id}" }
    };

    protected override async Task OnInitializedAsync()
    {
        cities = await http.GetFromJsonAsync<CentersAggregatedData[]>("City/ListWithReports");

        colorsOfColumns = new Dictionary<string, List<string>>(3);
        colorsOfColumns.Add(nameof(CentersAggregatedData.CentersOnTimePMPercent),
            cities.Select(c => ColorUtils.GetColorOfPercent(c.CentersOnTimePMPercent)).ToList());
        colorsOfColumns.Add(nameof(CentersAggregatedData.LessThan5PriorityCentersOnTimePM),
            cities.Select(c => ColorUtils.GetColorOfPercent(c.LessThan5PriorityCentersOnTimePM)).ToList());
        colorsOfColumns.Add(nameof(CentersAggregatedData.MoreThan5PriorityCentersOnTimePM),
            cities.Select(c => ColorUtils.GetColorOfPercent(c.MoreThan5PriorityCentersOnTimePM)).ToList());
    }

}
