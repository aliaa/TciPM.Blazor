@page "/gasCable/new/{CenterId}"
@page "/gasCable/edit/{Id}"

@inject HttpClientX http


<EditEquipment @ref="editEquipment" Eq="GasCable" CenterId="@CenterId" Id="@Id" TypeDisplayName="کابل هواخور" AfterInitialized="OnAfterInit">
    <div class="row mt-4">
        @if (compressors != null)
        {
            <div class="col-lg-2 col-sm-4">
                <div class="form-group">
                    <Label For="() => model.ConnectedCompressor" />
                    <select class="form-select" @bind="model.ConnectedCompressor">
                        @foreach (var item in compressors)
                        {
                            <option value="@item.Value">@item.Text</option>
                        }
                    </select>
                </div>
            </div>
        }
        <div class="col-lg-2 col-sm-4">
            <div class="form-group">
                <Label For="() => model.Index" />
                <label class="form-control">@model.Index</label>
            </div>
        </div>
        <div class="col-lg-2 col-sm-4">
            <div class="form-group">
                <Label For="() => model.WirePairsCount" />
                <InputNumber class="form-control" @bind-Value="model.WirePairsCount" />
            </div>
        </div>
        <div class="col-lg-2 col-sm-4">
            <div class="form-group">
                <Label For="() => model.WiresDiameter" />
                <InputNumber class="form-control" @bind-Value="model.WiresDiameter" />
            </div>
        </div>
        <div class="col-lg-2 col-sm-4">
            <div class="form-group">
                <Label For="() => model.Length" />
                <InputNumber class="form-control" @bind-Value="model.Length" />
            </div>
        </div>
        <div class="col-lg-4 col-sm-12">
            <div class="form-group">
                <Label For="() => model.DestinationAddress" />
                <InputText class="form-control" @bind-Value="model.DestinationAddress" />
            </div>
        </div>
        <div class="col-lg-3 col-sm-6">
            <div class="form-group">
                <Label For="() => model.ProductionDate" />
                <InputDate class="form-control" @bind-Value="model.ProductionDate" />
            </div>
        </div>
        <div class="col-lg-3 col-sm-6">
            <div class="form-group">
                <Label For="() => model.InstallationDate" />
                <InputDate class="form-control" @bind-Value="model.InstallationDate" />
            </div>
        </div>
    </div>
</EditEquipment>

@code {
    [Parameter]
    public string CenterId { get; set; }

    [Parameter]
    public string Id { get; set; }

    EditEquipment<GasCable> editEquipment;

    GasCable model => editEquipment.Model;
    List<TextValue> compressors;

    protected async Task OnAfterInit()
    {
        if (Id != null)
        {
            compressors = await http.GetFromJsonAsync<List<TextValue>>($"Equipments/Compressors?centerId={model.Center}");
        }
        else
        {
            compressors = await http.GetFromJsonAsync<List<TextValue>>($"Equipments/Compressors?centerId={CenterId}");
            model.Index = await http.GetFromJsonAsync<int>($"Equipments/GasCableNewIndex?centerId={CenterId}");
            if (compressors != null && compressors.Count > 0)
                model.ConnectedCompressor = compressors[0].Value;
        }
    }
}