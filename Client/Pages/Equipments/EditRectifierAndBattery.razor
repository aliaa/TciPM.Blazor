@page "/rectbatt/new/{CenterId}"
@page "/rectbatt/edit/{Id}"

@inject HttpClientX http
@inject IToastService toast
@inject NavigationManager nav

<div class="container">
    @if (Id == null)
    {
        <h2>یکسوساز و باتری جدید</h2>
    }
    else
    {
        <h2>ویرایش یکسوساز و باتری</h2>
    }
    @if (model != null)
    {
        <EditForm Model="model" OnValidSubmit="Save">
            <DataAnnotationsValidator />
            <div class="card mt-5">
                <div class="card-header">
                    <h4 class="mb-0">یکسوساز</h4>
                </div>
                <div class="card-body">
                    <div class="row">
                        <div class="col-lg-3 col-sm-6">
                            <div class="form-group">
                                <Label For="() => model.Name" />
                                <InputText class="form-control" @bind-Value="model.Name" />
                            </div>
                        </div>
                        <div class="col-lg-3 col-sm-6">
                            <div class="form-group">
                                <Label For="() => model.Brand" />
                                <InputText class="form-control" @bind-Value="model.Brand" />
                            </div>
                        </div>
                        <div class="col-lg-3 col-sm-6">
                            <div class="form-group">
                                <Label For="() => model.RectifierModel" />
                                <InputText class="form-control" @bind-Value="model.Model" />
                            </div>
                        </div>
                        <div class="col-lg-3 col-sm-6">
                            <div class="form-group">
                                <Label For="() => model.ProductionDate" />
                                <InputDate class="form-control" @bind-Value="model.ProductionDate" />
                            </div>
                        </div>
                        <div class="col-lg-3 col-sm-6">
                            <div class="form-group">
                                <Label For="() => model.InstallationDate" />
                                <InputDate class="form-control" @bind-Value="model.InstallationDate" />
                            </div>
                        </div>
                        <div class="col-lg-3 col-sm-6">
                            <div class="form-group">
                                <Label For="() => model.EachRectifierCapacity" />
                                <InputNumber class="form-control" @bind-Value="model.EachRectifierCapacity" />
                            </div>
                        </div>
                        <div class="col-lg-3 col-sm-6">
                            <div class="form-group">
                                <Label For="() => model.RectifierCount" />
                                <InputNumber class="form-control" @bind-Value="model.RectifierCount" />
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <div class="card mt-5">
                <div class="card-header">
                    <h4 class="mb-0">باتری</h4>
                </div>
                <div class="card-body">
                    <div class="">

                    </div>
                </div>
            </div>
            <ValidationSummary />
            <div class="mt-5">
                <input type="submit" value="ذخیره" class="btn btn-primary" />
            </div>
        </EditForm>
    }
</div>

@code {
    [Parameter]
    public string CenterId { get; set; }

    [Parameter]
    public string Id { get; set; }

    private RectifierAndBattery model;

    protected override async Task OnInitializedAsync()
    {
        if (Id != null)
            model = await http.GetFromJsonAsync<RectifierAndBattery>($"Equipments/RectBattery/{Id}");
        else
            model = new RectifierAndBattery { Center = CenterId };
    }

    private async Task Save(EditContext context)
    {
        try
        {
            await http.PostAsJsonAsync("Equipments/RectBattery", model);
        }
        catch (Exception ex)
        {
            toast.ShowError(ex.Message);
            return;
        }

        toast.ShowSuccess("اطلاعات با موفقیت ذخیره شده.");
        nav.NavigateTo($"/center/edit/{model.Center}");
    }
}
