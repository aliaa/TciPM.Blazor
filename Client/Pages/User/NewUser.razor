@inject HttpClientX http
@attribute [Authorize(nameof(Permission.ManageUsers))]

<EditForm Model="user" OnValidSubmit="Submit">
    <DataAnnotationsValidator />
    <div class="form-group">
        <Label For="@(() => user.FirstName)" />
        <InputText type="text" class="form-control" @bind-Value="user.FirstName" />
    </div>
    <div class="form-group">
        <Label For="@(() => user.LastName)" />
        <InputText type="text" class="form-control" @bind-Value="user.LastName" />
    </div>
    <div class="form-group">
        <Label For="@(() => user.Username)" />
        <InputText type="text" class="form-control" @bind-Value="user.Username" />
    </div>
    <div class="form-group">
        <Label For="@(() => user.Password)" />
        <InputText type="password" class="form-control" @bind-Value="user.Password" />
    </div>
    <div class="form-group">
        <Label For="@(() => user.RetypePassword)" />
        <InputText type="password" class="form-control" @bind-Value="user.RetypePassword" />
    </div>
    <ValidationSummary />
    <div>
        <input type="submit" class="btn btn-primary" value="ذخیره" />
    </div>
</EditForm>

@code {
    private NewUserVM user = new NewUserVM();

    [CascadingParameter]
    BlazoredModalInstance modal { get; set; }

    [Parameter]
    public EventCallback OnSubmitted { get; set; }

    private async Task Submit()
    {
        var resp = await http.PostAsJsonAsync("Account/Add", user);
        if (modal != null)
            await modal.Close();
        await OnSubmitted.InvokeAsync(null);
    }
}
