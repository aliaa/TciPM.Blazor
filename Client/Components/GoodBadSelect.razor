<select @onchange="OnValueChanged" class="form-select" style="@Style">
    <option value="@nameof(GoodBad.None)" selected="@(Value == GoodBad.None)">@NoneText</option>
    <option value="@nameof(GoodBad.Good)" selected="@(Value == GoodBad.Good)">@GoodText</option>
    <option value="@nameof(GoodBad.Bad)"  selected="@(Value == GoodBad.Bad)">@BadText</option>
</select>

@code {

    protected override void OnInitialized()
    {
        BackgroundColor = Value switch
        {
            GoodBad.Good => "#bdf5bd",
            GoodBad.Bad => "#fcbcb5",
            _ => "white"
        };
    }

    private string Style => $"background-color: {BackgroundColor};";

    [Parameter]
    public GoodBad Value { get; set; }

    [Parameter]
    public string GoodText { get; set; } = "خوب";

    [Parameter]
    public string BadText { get; set; } = "بد";

    [Parameter]
    public string NoneText { get; set; } = "";

    [Parameter]
    public EventCallback<GoodBad> ValueChanged { get; set; }

    private string BackgroundColor { get; set; } = "initial";

    private async Task OnValueChanged(ChangeEventArgs e)
    {
        Value = Enum.Parse<GoodBad>(e.Value as string);
        Console.WriteLine(e.Value);
        OnInitialized();
        await ValueChanged.InvokeAsync(Value);
    }
}
